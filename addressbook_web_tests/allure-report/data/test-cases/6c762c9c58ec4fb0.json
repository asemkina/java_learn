{"uid":"6c762c9c58ec4fb0","name":"CanCreateMultipleContacts(ContactData) [1] ContactData[id=, firstname=, lastname=, address=, home=, email=, photo=src\\test\\resources\\images\\butterfly2.png, mobile=null, work=null, phone2=null, email2=null, email3=null]","fullName":"tests.ContactCreationTests.CanCreateMultipleContacts","historyId":"b8057e5e472d90611f90171431622a9a","time":{"start":1748300215200,"stop":1748300230333,"duration":15133},"description":"","status":"broken","statusMessage":"Keys to send should be a not null CharSequence","statusTrace":"java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence\r\n\tat org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)\r\n\tat manager.HelperBase.type(HelperBase.java:22)\r\n\tat manager.ContactHelper.fillContactFormWithoutPhoto(ContactHelper.java:105)\r\n\tat manager.ContactHelper.createContact(ContactHelper.java:23)\r\n\tat tests.ContactCreationTests.CanCreateMultipleContacts(ContactCreationTests.java:41)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:tests.ContactCreationTests]/[test-template:CanCreateMultipleContacts(model.ContactData)]/[test-template-invocation:#1]"},{"name":"host","value":"DESKTOP-GAJM61P"},{"name":"thread","value":"22884@DESKTOP-GAJM61P.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"tests.ContactCreationTests"},{"name":"testClass","value":"tests.ContactCreationTests"},{"name":"testMethod","value":"CanCreateMultipleContacts"},{"name":"suite","value":"tests.ContactCreationTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ba756acd4ea5b1ed","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748300018254,"stop":1748300034046,"duration":15792}},{"uid":"5a43d2454e88bfbf","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748299822601,"stop":1748299830951,"duration":8350}},{"uid":"13081a0a5eda7819","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748299620833,"stop":1748299631296,"duration":10463}},{"uid":"b50f7fd9eaf528ec","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748122601376,"stop":1748122611952,"duration":10576}},{"uid":"154fc476ec6efc92","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748120890830,"stop":1748120901607,"duration":10777}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"255a06ed58a7551e","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748122601376,"stop":1748122611952,"duration":10576}},{"uid":"59edbbbff5339e2e","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748120890830,"stop":1748120901607,"duration":10777}}]},"tags":[]},"source":"6c762c9c58ec4fb0.json","parameterValues":[]}