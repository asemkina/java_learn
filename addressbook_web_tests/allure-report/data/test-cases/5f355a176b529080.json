{"uid":"5f355a176b529080","name":"CanCreateMultipleContacts(ContactData) [2] ContactData[id=, firstname=vvrf, lastname=ieff, address=qduc, home=ycdc, email=rhqa, photo=src\\test\\resources\\images\\lemana.png, mobile=null, work=null, phone2=null, email2=null, email3=null]","fullName":"tests.ContactCreationTests.CanCreateMultipleContacts","historyId":"9e6afd6f7eaf3694aecde5893584aa15","time":{"start":1748300230432,"stop":1748300233476,"duration":3044},"description":"","status":"broken","statusMessage":"Keys to send should be a not null CharSequence","statusTrace":"java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence\r\n\tat org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)\r\n\tat manager.HelperBase.type(HelperBase.java:22)\r\n\tat manager.ContactHelper.fillContactFormWithoutPhoto(ContactHelper.java:105)\r\n\tat manager.ContactHelper.createContact(ContactHelper.java:23)\r\n\tat tests.ContactCreationTests.CanCreateMultipleContacts(ContactCreationTests.java:41)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:tests.ContactCreationTests]/[test-template:CanCreateMultipleContacts(model.ContactData)]/[test-template-invocation:#2]"},{"name":"host","value":"DESKTOP-GAJM61P"},{"name":"thread","value":"22884@DESKTOP-GAJM61P.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"tests.ContactCreationTests"},{"name":"testClass","value":"tests.ContactCreationTests"},{"name":"testMethod","value":"CanCreateMultipleContacts"},{"name":"suite","value":"tests.ContactCreationTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f015e4f035a17705","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748300034225,"stop":1748300037323,"duration":3098}},{"uid":"369448d33c8c4486","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748299830951,"stop":1748299834066,"duration":3115}},{"uid":"a5d3a5d05e589793","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748299631296,"stop":1748299634481,"duration":3185}},{"uid":"5893a52febb67350","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748122611976,"stop":1748122615624,"duration":3648}},{"uid":"4521cade53352cfe","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748120901632,"stop":1748120905239,"duration":3607}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"57aa9a98d8989021","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748122611976,"stop":1748122615624,"duration":3648}},{"uid":"84645cb14a1b2280","status":"broken","statusDetails":"Keys to send should be a not null CharSequence","time":{"start":1748120901632,"stop":1748120905239,"duration":3607}}]},"tags":[]},"source":"5f355a176b529080.json","parameterValues":[]}